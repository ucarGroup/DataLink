<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ucar.datalink</groupId>
        <artifactId>dl-worker</artifactId>
        <version>0.0.2</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>dl-worker-reader-mysql</artifactId>
    <packaging>jar</packaging>
    <name>canalreader module for datalink-worker</name>

    <properties>
        <canal.version>1.0.24</canal.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.ucar.datalink</groupId>
            <artifactId>dl-worker-api</artifactId>
            <version>0.0.2</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba.otter</groupId>
            <artifactId>canal.instance.manager</artifactId>
            <version>${canal.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.alibaba.otter</groupId>
            <artifactId>canal.parse</artifactId>
            <version>${canal.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.alibaba.otter</groupId>
            <artifactId>canal.server</artifactId>
            <version>${canal.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--
            Framework中也用到了guava包，这里之所以再次引用,是因为canal的common模块中的com.google.common.collect.MigrateMap类，
            这个类需要访问guava包的MapMaker类中的makeComputingMap方法，该方法访问级别是包内访问.
            在同一个classloader下，因为MigrateMap和MapMaker的package名相同，访问makeComputingMap方法是没有问题的
            但此处插件有自己的classloader，跨classloader访问是不允许的,所以插件必须自己单独引用，由自己的classloader单独加载。
        -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <!--
            此处引用的fastjson版本和framework的不一致，因为canal用不了比较新的版本
        -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.25</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/package.xml</descriptor>
                    </descriptors>
                    <finalName>reader-mysql</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <outputDirectory>${project.parent.parent.build.directory}/dl-worker/plugin/reader
                    </outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>